// dart format width=80
import 'package:drift/internal/versioned_schema.dart' as i0;
import 'package:drift/drift.dart' as i1;
import 'package:drift/drift.dart'; // ignore_for_file: type=lint,unused_import

// GENERATED BY drift_dev, DO NOT MODIFY.
final class Schema2 extends i0.VersionedSchema {
  Schema2({required super.database}) : super(version: 2);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [admins, syncQueue];
  late final Shape0 admins = Shape0(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_12,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape0 extends i0.VersionedTable {
  Shape0({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get phone =>
      columnsByName['phone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get firstName =>
      columnsByName['first_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastName =>
      columnsByName['last_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get email =>
      columnsByName['email']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get avatarUrl =>
      columnsByName['avatar_url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<bool> _column_0(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'is_synced',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("is_synced" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<DateTime> _column_1(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
      'deleted_at',
      aliasedName,
      true,
      type: i1.DriftSqlType.dateTime,
    );
i1.GeneratedColumn<String> _column_2(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'sync_action',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_3(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'sync_retry_count',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<String> _column_4(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'sync_error',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<DateTime> _column_5(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
      'last_sync_attempt',
      aliasedName,
      true,
      type: i1.DriftSqlType.dateTime,
    );
i1.GeneratedColumn<int> _column_6(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'id',
      aliasedName,
      false,
      hasAutoIncrement: true,
      type: i1.DriftSqlType.int,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'PRIMARY KEY AUTOINCREMENT',
      ),
    );
i1.GeneratedColumn<String> _column_7(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'uid',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_8(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'phone',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_9(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'first_name',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_10(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'last_name',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_11(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'email',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_12(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'avatar_url',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<DateTime> _column_13(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
      'updated_at',
      aliasedName,
      false,
      type: i1.DriftSqlType.dateTime,
    );
i1.GeneratedColumn<DateTime> _column_14(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
      'created_at',
      aliasedName,
      false,
      type: i1.DriftSqlType.dateTime,
    );

class Shape1 extends i0.VersionedTable {
  Shape1({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get entityType =>
      columnsByName['entity_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get entityUid =>
      columnsByName['entity_uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get action =>
      columnsByName['action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get payload =>
      columnsByName['payload']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get retryCount =>
      columnsByName['retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get error =>
      columnsByName['error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get scheduledAt =>
      columnsByName['scheduled_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get isProcessed =>
      columnsByName['is_processed']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_15(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'entity_type',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_16(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'entity_uid',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_17(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'action',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_18(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'payload',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_19(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'priority',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<int> _column_20(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'retry_count',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<String> _column_21(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'error',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<DateTime> _column_22(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
      'scheduled_at',
      aliasedName,
      true,
      type: i1.DriftSqlType.dateTime,
    );
i1.GeneratedColumn<bool> _column_23(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'is_processed',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("is_processed" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );

final class Schema3 extends i0.VersionedSchema {
  Schema3({required super.database}) : super(version: 3);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [admins, syncQueue];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape2 extends i0.VersionedTable {
  Shape2({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get phone =>
      columnsByName['phone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get firstName =>
      columnsByName['first_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastName =>
      columnsByName['last_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get email =>
      columnsByName['email']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
}

final class Schema4 extends i0.VersionedSchema {
  Schema4({required super.database}) : super(version: 4);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape3 extends i0.VersionedTable {
  Shape3({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get companyID =>
      columnsByName['company_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isSystemRole =>
      columnsByName['is_system_role']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get isActive =>
      columnsByName['is_active']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_24(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'name',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_25(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'description',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_26(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'company_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<bool> _column_27(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'is_system_role',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("is_system_role" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<bool> _column_28(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'is_active',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("is_active" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('1'),
    );

class Shape4 extends i0.VersionedTable {
  Shape4({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get code =>
      columnsByName['code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get scope =>
      columnsByName['scope']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get roleID =>
      columnsByName['role_i_d']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_29(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'code',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_30(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'category',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_31(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'scope',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_32(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'role_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

final class Schema5 extends i0.VersionedSchema {
  Schema5({required super.database}) : super(version: 5);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
    companies,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape5 companies = Shape5(
    source: i0.VersionedTable(
      entityName: 'companies',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_6,
        _column_7,
        _column_24,
        _column_33,
        _column_34,
        _column_35,
        _column_36,
        _column_37,
        _column_38,
        _column_39,
        _column_40,
        _column_11,
        _column_41,
        _column_42,
        _column_43,
        _column_44,
        _column_45,
        _column_14,
        _column_13,
        _column_1,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape5 extends i0.VersionedTable {
  Shape5({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get regNo =>
      columnsByName['reg_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cidbNo =>
      columnsByName['cidb_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get postalCode =>
      columnsByName['postal_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get city =>
      columnsByName['city']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get state =>
      columnsByName['state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get country =>
      columnsByName['country']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get phone =>
      columnsByName['phone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get email =>
      columnsByName['email']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get website =>
      columnsByName['website']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyType =>
      columnsByName['company_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ownerID =>
      columnsByName['owner_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get defaultBankAcc =>
      columnsByName['default_bank_acc']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get defaultBankAccType =>
      columnsByName['default_bank_acc_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_33(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'reg_no',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_34(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'cidb_no',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_35(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'address',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_36(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'postal_code',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_37(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'city',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_38(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'state',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_39(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'country',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_40(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'phone',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_41(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'website',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_42(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'company_type',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_43(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'owner_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<String> _column_44(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'default_bank_acc',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_45(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'default_bank_acc_type',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );

final class Schema6 extends i0.VersionedSchema {
  Schema6({required super.database}) : super(version: 6);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
    companies,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape6 companies = Shape6(
    source: i0.VersionedTable(
      entityName: 'companies',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_6,
        _column_7,
        _column_24,
        _column_33,
        _column_34,
        _column_35,
        _column_36,
        _column_37,
        _column_38,
        _column_39,
        _column_40,
        _column_11,
        _column_41,
        _column_42,
        _column_43,
        _column_44,
        _column_45,
        _column_14,
        _column_13,
        _column_1,
        _column_46,
        _column_47,
        _column_48,
        _column_49,
        _column_50,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape6 extends i0.VersionedTable {
  Shape6({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get regNo =>
      columnsByName['reg_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cidbNo =>
      columnsByName['cidb_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get postalCode =>
      columnsByName['postal_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get city =>
      columnsByName['city']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get state =>
      columnsByName['state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get country =>
      columnsByName['country']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get phone =>
      columnsByName['phone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get email =>
      columnsByName['email']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get website =>
      columnsByName['website']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyType =>
      columnsByName['company_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ownerID =>
      columnsByName['owner_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get defaultBankAcc =>
      columnsByName['default_bank_acc']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get defaultBankAccType =>
      columnsByName['default_bank_acc_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get adminRoleUid =>
      columnsByName['admin_role_uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get adminRoleName =>
      columnsByName['admin_role_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get bumiputera =>
      columnsByName['bumiputera']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get einvoiceTinNo =>
      columnsByName['einvoice_tin_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get registrationDate =>
      columnsByName['registration_date']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_46(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'admin_role_uid',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_47(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'admin_role_name',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<bool> _column_48(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'bumiputera',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("bumiputera" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<String> _column_49(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'einvoice_tin_no',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<DateTime> _column_50(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
      'registration_date',
      aliasedName,
      true,
      type: i1.DriftSqlType.dateTime,
    );

final class Schema7 extends i0.VersionedSchema {
  Schema7({required super.database}) : super(version: 7);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
    companies,
    scopeOfWorks,
    workQuantityTypes,
    quantityFields,
    dropdownOptions,
    workEquipments,
    scopeOfWorkEquipments,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape6 companies = Shape6(
    source: i0.VersionedTable(
      entityName: 'companies',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_6,
        _column_7,
        _column_24,
        _column_33,
        _column_34,
        _column_35,
        _column_36,
        _column_37,
        _column_38,
        _column_39,
        _column_40,
        _column_11,
        _column_41,
        _column_42,
        _column_43,
        _column_44,
        _column_45,
        _column_14,
        _column_13,
        _column_1,
        _column_46,
        _column_47,
        _column_48,
        _column_49,
        _column_50,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape7 scopeOfWorks = Shape7(
    source: i0.VersionedTable(
      entityName: 'scope_of_works',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_51,
        _column_52,
        _column_14,
        _column_13,
        _column_26,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape8 workQuantityTypes = Shape8(
    source: i0.VersionedTable(
      entityName: 'work_quantity_types',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_53,
        _column_54,
        _column_55,
        _column_56,
        _column_57,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape9 quantityFields = Shape9(
    source: i0.VersionedTable(
      entityName: 'quantity_fields',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_58,
        _column_59,
        _column_60,
        _column_53,
        _column_61,
        _column_62,
        _column_63,
        _column_64,
        _column_65,
        _column_66,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape10 dropdownOptions = Shape10(
    source: i0.VersionedTable(
      entityName: 'dropdown_options',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_67,
        _column_53,
        _column_68,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape11 workEquipments = Shape11(
    source: i0.VersionedTable(
      entityName: 'work_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape12 scopeOfWorkEquipments = Shape12(
    source: i0.VersionedTable(
      entityName: 'scope_of_work_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(scope_of_work_id, work_equipment_id)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_57,
        _column_69,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape7 extends i0.VersionedTable {
  Shape7({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get code =>
      columnsByName['code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get allowMultipleQuantities =>
      columnsByName['allow_multiple_quantities']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get companyID =>
      columnsByName['company_i_d']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_51(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'description',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<bool> _column_52(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'allow_multiple_quantities',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("allow_multiple_quantities" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );

class Shape8 extends i0.VersionedTable {
  Shape8({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get code =>
      columnsByName['code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get displayOrder =>
      columnsByName['display_order']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get hasSegmentBreakdown =>
      columnsByName['has_segment_breakdown']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get segmentSize =>
      columnsByName['segment_size']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get maxSegmentLength =>
      columnsByName['max_segment_length']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get scopeOfWorkId =>
      columnsByName['scope_of_work_id']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_53(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'display_order',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<bool> _column_54(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'has_segment_breakdown',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("has_segment_breakdown" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<int> _column_55(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'segment_size',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_56(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'max_segment_length',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_57(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'scope_of_work_id',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape9 extends i0.VersionedTable {
  Shape9({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get code =>
      columnsByName['code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fieldType =>
      columnsByName['field_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get unit =>
      columnsByName['unit']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get validationRules =>
      columnsByName['validation_rules']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get displayOrder =>
      columnsByName['display_order']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isRequired =>
      columnsByName['is_required']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get isForSegment =>
      columnsByName['is_for_segment']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get defaultValue =>
      columnsByName['default_value']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get placeholder =>
      columnsByName['placeholder']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get helpText =>
      columnsByName['help_text']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get workQuantityTypeId =>
      columnsByName['work_quantity_type_id']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_58(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'field_type',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_59(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'unit',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_60(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'validation_rules',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<bool> _column_61(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'is_required',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("is_required" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<bool> _column_62(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'is_for_segment',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("is_for_segment" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<String> _column_63(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'default_value',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_64(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'placeholder',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_65(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'help_text',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_66(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'work_quantity_type_id',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape10 extends i0.VersionedTable {
  Shape10({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get value =>
      columnsByName['value']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get displayOrder =>
      columnsByName['display_order']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get quantityFieldId =>
      columnsByName['quantity_field_id']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_67(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'value',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_68(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'quantity_field_id',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape11 extends i0.VersionedTable {
  Shape11({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get code =>
      columnsByName['code']! as i1.GeneratedColumn<String>;
}

class Shape12 extends i0.VersionedTable {
  Shape12({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get scopeOfWorkId =>
      columnsByName['scope_of_work_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get workEquipmentId =>
      columnsByName['work_equipment_id']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_69(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'work_equipment_id',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

final class Schema8 extends i0.VersionedSchema {
  Schema8({required super.database}) : super(version: 8);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
    companies,
    workScopes,
    workQuantityTypes,
    workQuantityFields,
    workQuantityFieldOptions,
    workScopeEquipments,
    workScopeEquipment,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape6 companies = Shape6(
    source: i0.VersionedTable(
      entityName: 'companies',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_6,
        _column_7,
        _column_24,
        _column_33,
        _column_34,
        _column_35,
        _column_36,
        _column_37,
        _column_38,
        _column_39,
        _column_40,
        _column_11,
        _column_41,
        _column_42,
        _column_43,
        _column_44,
        _column_45,
        _column_14,
        _column_13,
        _column_1,
        _column_46,
        _column_47,
        _column_48,
        _column_49,
        _column_50,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape7 workScopes = Shape7(
    source: i0.VersionedTable(
      entityName: 'work_scopes',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_51,
        _column_52,
        _column_14,
        _column_13,
        _column_26,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape13 workQuantityTypes = Shape13(
    source: i0.VersionedTable(
      entityName: 'work_quantity_types',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_53,
        _column_54,
        _column_55,
        _column_56,
        _column_70,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape14 workQuantityFields = Shape14(
    source: i0.VersionedTable(
      entityName: 'work_quantity_fields',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_58,
        _column_59,
        _column_60,
        _column_53,
        _column_61,
        _column_62,
        _column_63,
        _column_64,
        _column_65,
        _column_71,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape15 workQuantityFieldOptions = Shape15(
    source: i0.VersionedTable(
      entityName: 'work_quantity_field_options',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_67,
        _column_53,
        _column_72,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape11 workScopeEquipments = Shape11(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape16 workScopeEquipment = Shape16(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipment',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(work_scope_i_d, work_equipment_i_d)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_70,
        _column_73,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape13 extends i0.VersionedTable {
  Shape13({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get code =>
      columnsByName['code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get displayOrder =>
      columnsByName['display_order']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get hasSegmentBreakdown =>
      columnsByName['has_segment_breakdown']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get segmentSize =>
      columnsByName['segment_size']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get maxSegmentLength =>
      columnsByName['max_segment_length']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get workScopeID =>
      columnsByName['work_scope_i_d']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_70(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'work_scope_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape14 extends i0.VersionedTable {
  Shape14({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get code =>
      columnsByName['code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fieldType =>
      columnsByName['field_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get unit =>
      columnsByName['unit']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get validationRules =>
      columnsByName['validation_rules']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get displayOrder =>
      columnsByName['display_order']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isRequired =>
      columnsByName['is_required']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get isForSegment =>
      columnsByName['is_for_segment']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get defaultValue =>
      columnsByName['default_value']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get placeholder =>
      columnsByName['placeholder']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get helpText =>
      columnsByName['help_text']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get quantityTypeID =>
      columnsByName['quantity_type_i_d']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_71(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'quantity_type_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape15 extends i0.VersionedTable {
  Shape15({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get value =>
      columnsByName['value']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get displayOrder =>
      columnsByName['display_order']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get fieldID =>
      columnsByName['field_i_d']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_72(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'field_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape16 extends i0.VersionedTable {
  Shape16({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get workScopeID =>
      columnsByName['work_scope_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get workEquipmentID =>
      columnsByName['work_equipment_i_d']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_73(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'work_equipment_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

final class Schema9 extends i0.VersionedSchema {
  Schema9({required super.database}) : super(version: 9);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
    companies,
    workScopes,
    workQuantityTypes,
    workQuantityFields,
    workQuantityFieldOptions,
    workScopeEquipments,
    workScopeEquipment,
    countries,
    provinces,
    districts,
    roadCategories,
    roads,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape6 companies = Shape6(
    source: i0.VersionedTable(
      entityName: 'companies',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_6,
        _column_7,
        _column_24,
        _column_33,
        _column_34,
        _column_35,
        _column_36,
        _column_37,
        _column_38,
        _column_39,
        _column_40,
        _column_11,
        _column_41,
        _column_42,
        _column_43,
        _column_44,
        _column_45,
        _column_14,
        _column_13,
        _column_1,
        _column_46,
        _column_47,
        _column_48,
        _column_49,
        _column_50,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape7 workScopes = Shape7(
    source: i0.VersionedTable(
      entityName: 'work_scopes',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_51,
        _column_52,
        _column_14,
        _column_13,
        _column_26,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape13 workQuantityTypes = Shape13(
    source: i0.VersionedTable(
      entityName: 'work_quantity_types',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_53,
        _column_54,
        _column_55,
        _column_56,
        _column_70,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape14 workQuantityFields = Shape14(
    source: i0.VersionedTable(
      entityName: 'work_quantity_fields',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_58,
        _column_59,
        _column_60,
        _column_53,
        _column_61,
        _column_62,
        _column_63,
        _column_64,
        _column_65,
        _column_71,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape15 workQuantityFieldOptions = Shape15(
    source: i0.VersionedTable(
      entityName: 'work_quantity_field_options',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_67,
        _column_53,
        _column_72,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape11 workScopeEquipments = Shape11(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape16 workScopeEquipment = Shape16(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipment',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(work_scope_i_d, work_equipment_i_d)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_70,
        _column_73,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape17 countries = Shape17(
    source: i0.VersionedTable(
      entityName: 'countries',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape18 provinces = Shape18(
    source: i0.VersionedTable(
      entityName: 'provinces',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_74,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape19 districts = Shape19(
    source: i0.VersionedTable(
      entityName: 'districts',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_75,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape17 roadCategories = Shape17(
    source: i0.VersionedTable(
      entityName: 'road_categories',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape20 roads = Shape20(
    source: i0.VersionedTable(
      entityName: 'roads',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_76,
        _column_77,
        _column_78,
        _column_79,
        _column_80,
        _column_81,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape17 extends i0.VersionedTable {
  Shape17({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

class Shape18 extends i0.VersionedTable {
  Shape18({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get countryID =>
      columnsByName['country_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_74(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'country_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape19 extends i0.VersionedTable {
  Shape19({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get stateId =>
      columnsByName['state_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_75(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'state_id',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape20 extends i0.VersionedTable {
  Shape20({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get roadNo =>
      columnsByName['road_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get sectionStart =>
      columnsByName['section_start']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get sectionFinish =>
      columnsByName['section_finish']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get mainCategoryId =>
      columnsByName['main_category_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get secondaryCategoryId =>
      columnsByName['secondary_category_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get districtId =>
      columnsByName['district_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_76(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'road_no',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_77(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'section_start',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_78(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'section_finish',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_79(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'main_category_id',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_80(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'secondary_category_id',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_81(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'district_id',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

final class Schema10 extends i0.VersionedSchema {
  Schema10({required super.database}) : super(version: 10);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
    companies,
    workScopes,
    workQuantityTypes,
    workQuantityFields,
    workQuantityFieldOptions,
    workScopeEquipments,
    workScopeEquipment,
    countries,
    provinces,
    districts,
    roadCategories,
    roads,
    dailyReports,
    reportEquipments,
    reportQuantities,
    reportQuantityValues,
    reportSegments,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape6 companies = Shape6(
    source: i0.VersionedTable(
      entityName: 'companies',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_6,
        _column_7,
        _column_24,
        _column_33,
        _column_34,
        _column_35,
        _column_36,
        _column_37,
        _column_38,
        _column_39,
        _column_40,
        _column_11,
        _column_41,
        _column_42,
        _column_43,
        _column_44,
        _column_45,
        _column_14,
        _column_13,
        _column_1,
        _column_46,
        _column_47,
        _column_48,
        _column_49,
        _column_50,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape7 workScopes = Shape7(
    source: i0.VersionedTable(
      entityName: 'work_scopes',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_51,
        _column_52,
        _column_14,
        _column_13,
        _column_26,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape13 workQuantityTypes = Shape13(
    source: i0.VersionedTable(
      entityName: 'work_quantity_types',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_53,
        _column_54,
        _column_55,
        _column_56,
        _column_70,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape14 workQuantityFields = Shape14(
    source: i0.VersionedTable(
      entityName: 'work_quantity_fields',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_58,
        _column_59,
        _column_60,
        _column_53,
        _column_61,
        _column_62,
        _column_63,
        _column_64,
        _column_65,
        _column_71,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape15 workQuantityFieldOptions = Shape15(
    source: i0.VersionedTable(
      entityName: 'work_quantity_field_options',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_67,
        _column_53,
        _column_72,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape11 workScopeEquipments = Shape11(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape16 workScopeEquipment = Shape16(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipment',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(work_scope_i_d, work_equipment_i_d)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_70,
        _column_73,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape17 countries = Shape17(
    source: i0.VersionedTable(
      entityName: 'countries',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape18 provinces = Shape18(
    source: i0.VersionedTable(
      entityName: 'provinces',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_74,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape19 districts = Shape19(
    source: i0.VersionedTable(
      entityName: 'districts',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_75,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape17 roadCategories = Shape17(
    source: i0.VersionedTable(
      entityName: 'road_categories',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape20 roads = Shape20(
    source: i0.VersionedTable(
      entityName: 'roads',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_76,
        _column_77,
        _column_78,
        _column_79,
        _column_80,
        _column_81,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape21 dailyReports = Shape21(
    source: i0.VersionedTable(
      entityName: 'daily_reports',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_82,
        _column_83,
        _column_84,
        _column_85,
        _column_86,
        _column_26,
        _column_87,
        _column_88,
        _column_89,
        _column_90,
        _column_91,
        _column_70,
        _column_92,
        _column_93,
        _column_94,
        _column_95,
        _column_96,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape22 reportEquipments = Shape22(
    source: i0.VersionedTable(
      entityName: 'report_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(daily_report_i_d, work_equipment_i_d)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_97,
        _column_98,
        _column_73,
        _column_99,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape23 reportQuantities = Shape23(
    source: i0.VersionedTable(
      entityName: 'report_quantities',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [
        'UNIQUE(daily_report_i_d, quantity_type_i_d, sequence_no)',
      ],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_97,
        _column_98,
        _column_71,
        _column_100,
        _column_101,
        _column_82,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape24 reportQuantityValues = Shape24(
    source: i0.VersionedTable(
      entityName: 'report_quantity_values',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [
        'UNIQUE(report_quantity_i_d, quantity_field_i_d)',
        'UNIQUE(segment_i_d, quantity_field_i_d)',
      ],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_102,
        _column_103,
        _column_104,
        _column_67,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape25 reportSegments = Shape25(
    source: i0.VersionedTable(
      entityName: 'report_segments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(report_quantity_i_d, segment_number)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_105,
        _column_106,
        _column_107,
        _column_108,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape21 extends i0.VersionedTable {
  Shape21({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get notes =>
      columnsByName['notes']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get weatherCondition =>
      columnsByName['weather_condition']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get workPerformed =>
      columnsByName['work_performed']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<double> get longitude =>
      columnsByName['longitude']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get latitude =>
      columnsByName['latitude']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<int> get companyID =>
      columnsByName['company_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get contractRelationID =>
      columnsByName['contract_relation_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get status =>
      columnsByName['status']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get approvedByID =>
      columnsByName['approved_by_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get approvedAt =>
      columnsByName['approved_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get rejectionReason =>
      columnsByName['rejection_reason']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get workScopeID =>
      columnsByName['work_scope_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get roadID =>
      columnsByName['road_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get totalWorkers =>
      columnsByName['total_workers']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<double> get fromSection =>
      columnsByName['from_section']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get toSection =>
      columnsByName['to_section']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<int> get createdByID =>
      columnsByName['created_by_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_82(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'notes',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_83(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'weather_condition',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<bool> _column_84(String aliasedName) =>
    i1.GeneratedColumn<bool>(
      'work_performed',
      aliasedName,
      false,
      type: i1.DriftSqlType.bool,
      defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
        'CHECK ("work_performed" IN (0, 1))',
      ),
      defaultValue: const CustomExpression('0'),
    );
i1.GeneratedColumn<double> _column_85(String aliasedName) =>
    i1.GeneratedColumn<double>(
      'longitude',
      aliasedName,
      true,
      type: i1.DriftSqlType.double,
    );
i1.GeneratedColumn<double> _column_86(String aliasedName) =>
    i1.GeneratedColumn<double>(
      'latitude',
      aliasedName,
      true,
      type: i1.DriftSqlType.double,
    );
i1.GeneratedColumn<int> _column_87(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'contract_relation_i_d',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<String> _column_88(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'status',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
      defaultValue: const CustomExpression('\'SUBMITTED\''),
    );
i1.GeneratedColumn<int> _column_89(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'approved_by_i_d',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<DateTime> _column_90(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
      'approved_at',
      aliasedName,
      true,
      type: i1.DriftSqlType.dateTime,
    );
i1.GeneratedColumn<String> _column_91(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'rejection_reason',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_92(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'road_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_93(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'total_workers',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<double> _column_94(String aliasedName) =>
    i1.GeneratedColumn<double>(
      'from_section',
      aliasedName,
      true,
      type: i1.DriftSqlType.double,
    );
i1.GeneratedColumn<double> _column_95(String aliasedName) =>
    i1.GeneratedColumn<double>(
      'to_section',
      aliasedName,
      true,
      type: i1.DriftSqlType.double,
    );
i1.GeneratedColumn<int> _column_96(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'created_by_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape22 extends i0.VersionedTable {
  Shape22({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get reportType =>
      columnsByName['report_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get dailyReportID =>
      columnsByName['daily_report_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get workEquipmentID =>
      columnsByName['work_equipment_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get addedByID =>
      columnsByName['added_by_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_97(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'report_type',
      aliasedName,
      false,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<int> _column_98(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'daily_report_i_d',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_99(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'added_by_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape23 extends i0.VersionedTable {
  Shape23({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get reportType =>
      columnsByName['report_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get dailyReportID =>
      columnsByName['daily_report_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get quantityTypeID =>
      columnsByName['quantity_type_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get sequenceNo =>
      columnsByName['sequence_no']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<double> get totalLength =>
      columnsByName['total_length']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<String> get notes =>
      columnsByName['notes']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_100(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'sequence_no',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
      defaultValue: const CustomExpression('1'),
    );
i1.GeneratedColumn<double> _column_101(String aliasedName) =>
    i1.GeneratedColumn<double>(
      'total_length',
      aliasedName,
      true,
      type: i1.DriftSqlType.double,
    );

class Shape24 extends i0.VersionedTable {
  Shape24({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get reportQuantityID =>
      columnsByName['report_quantity_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get segmentID =>
      columnsByName['segment_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get quantityFieldID =>
      columnsByName['quantity_field_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get value =>
      columnsByName['value']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_102(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'report_quantity_i_d',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_103(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'segment_i_d',
      aliasedName,
      true,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_104(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'quantity_field_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );

class Shape25 extends i0.VersionedTable {
  Shape25({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get reportQuantityID =>
      columnsByName['report_quantity_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get segmentNumber =>
      columnsByName['segment_number']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<double> get startDistance =>
      columnsByName['start_distance']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get endDistance =>
      columnsByName['end_distance']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_105(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'report_quantity_i_d',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<int> _column_106(String aliasedName) =>
    i1.GeneratedColumn<int>(
      'segment_number',
      aliasedName,
      false,
      type: i1.DriftSqlType.int,
    );
i1.GeneratedColumn<double> _column_107(String aliasedName) =>
    i1.GeneratedColumn<double>(
      'start_distance',
      aliasedName,
      false,
      type: i1.DriftSqlType.double,
    );
i1.GeneratedColumn<double> _column_108(String aliasedName) =>
    i1.GeneratedColumn<double>(
      'end_distance',
      aliasedName,
      false,
      type: i1.DriftSqlType.double,
    );

final class Schema11 extends i0.VersionedSchema {
  Schema11({required super.database}) : super(version: 11);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
    companies,
    workScopes,
    workQuantityTypes,
    workQuantityFields,
    workQuantityFieldOptions,
    workScopeEquipments,
    workScopeEquipment,
    countries,
    provinces,
    districts,
    roadCategories,
    roads,
    dailyReports,
    reportEquipments,
    reportQuantities,
    reportQuantityValues,
    reportSegments,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape1 syncQueue = Shape1(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape6 companies = Shape6(
    source: i0.VersionedTable(
      entityName: 'companies',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_6,
        _column_7,
        _column_24,
        _column_33,
        _column_34,
        _column_35,
        _column_36,
        _column_37,
        _column_38,
        _column_39,
        _column_40,
        _column_11,
        _column_41,
        _column_42,
        _column_43,
        _column_44,
        _column_45,
        _column_14,
        _column_13,
        _column_1,
        _column_46,
        _column_47,
        _column_48,
        _column_49,
        _column_50,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape7 workScopes = Shape7(
    source: i0.VersionedTable(
      entityName: 'work_scopes',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_51,
        _column_52,
        _column_14,
        _column_13,
        _column_26,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape13 workQuantityTypes = Shape13(
    source: i0.VersionedTable(
      entityName: 'work_quantity_types',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_53,
        _column_54,
        _column_55,
        _column_56,
        _column_70,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape14 workQuantityFields = Shape14(
    source: i0.VersionedTable(
      entityName: 'work_quantity_fields',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_58,
        _column_59,
        _column_60,
        _column_53,
        _column_61,
        _column_62,
        _column_63,
        _column_64,
        _column_65,
        _column_71,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape15 workQuantityFieldOptions = Shape15(
    source: i0.VersionedTable(
      entityName: 'work_quantity_field_options',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_67,
        _column_53,
        _column_72,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape11 workScopeEquipments = Shape11(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape16 workScopeEquipment = Shape16(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipment',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(work_scope_i_d, work_equipment_i_d)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_70,
        _column_73,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape17 countries = Shape17(
    source: i0.VersionedTable(
      entityName: 'countries',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape18 provinces = Shape18(
    source: i0.VersionedTable(
      entityName: 'provinces',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_74,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape19 districts = Shape19(
    source: i0.VersionedTable(
      entityName: 'districts',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_75,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape17 roadCategories = Shape17(
    source: i0.VersionedTable(
      entityName: 'road_categories',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape20 roads = Shape20(
    source: i0.VersionedTable(
      entityName: 'roads',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_76,
        _column_77,
        _column_78,
        _column_79,
        _column_80,
        _column_81,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape26 dailyReports = Shape26(
    source: i0.VersionedTable(
      entityName: 'daily_reports',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_82,
        _column_83,
        _column_84,
        _column_85,
        _column_86,
        _column_26,
        _column_87,
        _column_88,
        _column_89,
        _column_90,
        _column_91,
        _column_70,
        _column_92,
        _column_93,
        _column_94,
        _column_95,
        _column_96,
        _column_14,
        _column_13,
        _column_109,
        _column_110,
        _column_111,
        _column_112,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape22 reportEquipments = Shape22(
    source: i0.VersionedTable(
      entityName: 'report_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(daily_report_i_d, work_equipment_i_d)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_97,
        _column_98,
        _column_73,
        _column_99,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape23 reportQuantities = Shape23(
    source: i0.VersionedTable(
      entityName: 'report_quantities',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [
        'UNIQUE(daily_report_i_d, quantity_type_i_d, sequence_no)',
      ],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_97,
        _column_98,
        _column_71,
        _column_100,
        _column_101,
        _column_82,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape24 reportQuantityValues = Shape24(
    source: i0.VersionedTable(
      entityName: 'report_quantity_values',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [
        'UNIQUE(report_quantity_i_d, quantity_field_i_d)',
        'UNIQUE(segment_i_d, quantity_field_i_d)',
      ],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_102,
        _column_103,
        _column_104,
        _column_67,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape25 reportSegments = Shape25(
    source: i0.VersionedTable(
      entityName: 'report_segments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(report_quantity_i_d, segment_number)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_105,
        _column_106,
        _column_107,
        _column_108,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape26 extends i0.VersionedTable {
  Shape26({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get deletedAt =>
      columnsByName['deleted_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get syncAction =>
      columnsByName['sync_action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get syncRetryCount =>
      columnsByName['sync_retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get uid =>
      columnsByName['uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get notes =>
      columnsByName['notes']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get weatherCondition =>
      columnsByName['weather_condition']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get workPerformed =>
      columnsByName['work_performed']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<double> get longitude =>
      columnsByName['longitude']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get latitude =>
      columnsByName['latitude']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<int> get companyID =>
      columnsByName['company_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get contractRelationID =>
      columnsByName['contract_relation_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get status =>
      columnsByName['status']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get approvedByID =>
      columnsByName['approved_by_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get approvedAt =>
      columnsByName['approved_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get rejectionReason =>
      columnsByName['rejection_reason']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get workScopeID =>
      columnsByName['work_scope_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get roadID =>
      columnsByName['road_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get totalWorkers =>
      columnsByName['total_workers']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<double> get fromSection =>
      columnsByName['from_section']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get toSection =>
      columnsByName['to_section']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<int> get createdByID =>
      columnsByName['created_by_i_d']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get workScopeData =>
      columnsByName['work_scope_data']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get roadData =>
      columnsByName['road_data']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get equipmentsData =>
      columnsByName['equipments_data']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get reportQuantitiesData =>
      columnsByName['report_quantities_data']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_109(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'work_scope_data',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_110(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'road_data',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_111(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'equipments_data',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_112(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'report_quantities_data',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );

final class Schema12 extends i0.VersionedSchema {
  Schema12({required super.database}) : super(version: 12);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    admins,
    syncQueue,
    roles,
    permissions,
    companies,
    workScopes,
    workQuantityTypes,
    workQuantityFields,
    workQuantityFieldOptions,
    workScopeEquipments,
    workScopeEquipment,
    countries,
    provinces,
    districts,
    roadCategories,
    roads,
    dailyReports,
    reportEquipments,
    reportQuantities,
    reportQuantityValues,
    reportSegments,
  ];
  late final Shape2 admins = Shape2(
    source: i0.VersionedTable(
      entityName: 'admins',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)', 'UNIQUE(phone)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_8,
        _column_9,
        _column_10,
        _column_11,
        _column_13,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape27 syncQueue = Shape27(
    source: i0.VersionedTable(
      entityName: 'sync_queue',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_6,
        _column_15,
        _column_16,
        _column_17,
        _column_18,
        _column_19,
        _column_20,
        _column_21,
        _column_14,
        _column_22,
        _column_23,
        _column_113,
        _column_114,
        _column_115,
        _column_116,
        _column_117,
        _column_118,
        _column_119,
        _column_120,
        _column_121,
        _column_0,
        _column_4,
        _column_5,
        _column_122,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape3 roles = Shape3(
    source: i0.VersionedTable(
      entityName: 'roles',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_25,
        _column_26,
        _column_27,
        _column_28,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape4 permissions = Shape4(
    source: i0.VersionedTable(
      entityName: 'permissions',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_29,
        _column_24,
        _column_25,
        _column_30,
        _column_31,
        _column_32,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape6 companies = Shape6(
    source: i0.VersionedTable(
      entityName: 'companies',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_6,
        _column_7,
        _column_24,
        _column_33,
        _column_34,
        _column_35,
        _column_36,
        _column_37,
        _column_38,
        _column_39,
        _column_40,
        _column_11,
        _column_41,
        _column_42,
        _column_43,
        _column_44,
        _column_45,
        _column_14,
        _column_13,
        _column_1,
        _column_46,
        _column_47,
        _column_48,
        _column_49,
        _column_50,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape7 workScopes = Shape7(
    source: i0.VersionedTable(
      entityName: 'work_scopes',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_51,
        _column_52,
        _column_14,
        _column_13,
        _column_26,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape13 workQuantityTypes = Shape13(
    source: i0.VersionedTable(
      entityName: 'work_quantity_types',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_53,
        _column_54,
        _column_55,
        _column_56,
        _column_70,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape14 workQuantityFields = Shape14(
    source: i0.VersionedTable(
      entityName: 'work_quantity_fields',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
        _column_58,
        _column_59,
        _column_60,
        _column_53,
        _column_61,
        _column_62,
        _column_63,
        _column_64,
        _column_65,
        _column_71,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape15 workQuantityFieldOptions = Shape15(
    source: i0.VersionedTable(
      entityName: 'work_quantity_field_options',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_67,
        _column_53,
        _column_72,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape11 workScopeEquipments = Shape11(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_29,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape16 workScopeEquipment = Shape16(
    source: i0.VersionedTable(
      entityName: 'work_scope_equipment',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(work_scope_i_d, work_equipment_i_d)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_70,
        _column_73,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape17 countries = Shape17(
    source: i0.VersionedTable(
      entityName: 'countries',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape18 provinces = Shape18(
    source: i0.VersionedTable(
      entityName: 'provinces',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_74,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape19 districts = Shape19(
    source: i0.VersionedTable(
      entityName: 'districts',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_75,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape17 roadCategories = Shape17(
    source: i0.VersionedTable(
      entityName: 'road_categories',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape20 roads = Shape20(
    source: i0.VersionedTable(
      entityName: 'roads',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_76,
        _column_77,
        _column_78,
        _column_79,
        _column_80,
        _column_81,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape26 dailyReports = Shape26(
    source: i0.VersionedTable(
      entityName: 'daily_reports',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(uid)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_7,
        _column_24,
        _column_82,
        _column_83,
        _column_84,
        _column_85,
        _column_86,
        _column_26,
        _column_87,
        _column_88,
        _column_89,
        _column_90,
        _column_91,
        _column_70,
        _column_92,
        _column_93,
        _column_94,
        _column_95,
        _column_96,
        _column_14,
        _column_13,
        _column_109,
        _column_110,
        _column_111,
        _column_112,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape22 reportEquipments = Shape22(
    source: i0.VersionedTable(
      entityName: 'report_equipments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(daily_report_i_d, work_equipment_i_d)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_97,
        _column_98,
        _column_73,
        _column_99,
        _column_14,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape23 reportQuantities = Shape23(
    source: i0.VersionedTable(
      entityName: 'report_quantities',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [
        'UNIQUE(daily_report_i_d, quantity_type_i_d, sequence_no)',
      ],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_97,
        _column_98,
        _column_71,
        _column_100,
        _column_101,
        _column_82,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape24 reportQuantityValues = Shape24(
    source: i0.VersionedTable(
      entityName: 'report_quantity_values',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: [
        'UNIQUE(report_quantity_i_d, quantity_field_i_d)',
        'UNIQUE(segment_i_d, quantity_field_i_d)',
      ],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_102,
        _column_103,
        _column_104,
        _column_67,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
  late final Shape25 reportSegments = Shape25(
    source: i0.VersionedTable(
      entityName: 'report_segments',
      withoutRowId: false,
      isStrict: false,
      tableConstraints: ['UNIQUE(report_quantity_i_d, segment_number)'],
      columns: [
        _column_0,
        _column_1,
        _column_2,
        _column_3,
        _column_4,
        _column_5,
        _column_6,
        _column_105,
        _column_106,
        _column_107,
        _column_108,
        _column_14,
        _column_13,
      ],
      attachedDatabase: database,
    ),
    alias: null,
  );
}

class Shape27 extends i0.VersionedTable {
  Shape27({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get entityType =>
      columnsByName['entity_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get entityUid =>
      columnsByName['entity_uid']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get action =>
      columnsByName['action']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get payload =>
      columnsByName['payload']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get retryCount =>
      columnsByName['retry_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get error =>
      columnsByName['error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get scheduledAt =>
      columnsByName['scheduled_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get isProcessed =>
      columnsByName['is_processed']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get endpoint =>
      columnsByName['endpoint']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get method =>
      columnsByName['method']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get jsonPayload =>
      columnsByName['json_payload']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get idempotencyKey =>
      columnsByName['idempotency_key']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get filePaths =>
      columnsByName['file_paths']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fileFieldName =>
      columnsByName['file_field_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fileUploadEndpoint =>
      columnsByName['file_upload_endpoint']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get featureName =>
      columnsByName['feature_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get localEntityId =>
      columnsByName['local_entity_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isSynced =>
      columnsByName['is_synced']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get syncError =>
      columnsByName['sync_error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastSyncAttempt =>
      columnsByName['last_sync_attempt']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_113(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'endpoint',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_114(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'method',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_115(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'json_payload',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_116(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'idempotency_key',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_117(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'file_paths',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_118(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'file_field_name',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_119(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'file_upload_endpoint',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_120(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'feature_name',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<String> _column_121(String aliasedName) =>
    i1.GeneratedColumn<String>(
      'local_entity_id',
      aliasedName,
      true,
      type: i1.DriftSqlType.string,
    );
i1.GeneratedColumn<DateTime> _column_122(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
      'updated_at',
      aliasedName,
      true,
      type: i1.DriftSqlType.dateTime,
    );
i0.MigrationStepWithVersion migrationSteps({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, Schema7 schema) from6To7,
  required Future<void> Function(i1.Migrator m, Schema8 schema) from7To8,
  required Future<void> Function(i1.Migrator m, Schema9 schema) from8To9,
  required Future<void> Function(i1.Migrator m, Schema10 schema) from9To10,
  required Future<void> Function(i1.Migrator m, Schema11 schema) from10To11,
  required Future<void> Function(i1.Migrator m, Schema12 schema) from11To12,
}) {
  return (currentVersion, database) async {
    switch (currentVersion) {
      case 1:
        final schema = Schema2(database: database);
        final migrator = i1.Migrator(database, schema);
        await from1To2(migrator, schema);
        return 2;
      case 2:
        final schema = Schema3(database: database);
        final migrator = i1.Migrator(database, schema);
        await from2To3(migrator, schema);
        return 3;
      case 3:
        final schema = Schema4(database: database);
        final migrator = i1.Migrator(database, schema);
        await from3To4(migrator, schema);
        return 4;
      case 4:
        final schema = Schema5(database: database);
        final migrator = i1.Migrator(database, schema);
        await from4To5(migrator, schema);
        return 5;
      case 5:
        final schema = Schema6(database: database);
        final migrator = i1.Migrator(database, schema);
        await from5To6(migrator, schema);
        return 6;
      case 6:
        final schema = Schema7(database: database);
        final migrator = i1.Migrator(database, schema);
        await from6To7(migrator, schema);
        return 7;
      case 7:
        final schema = Schema8(database: database);
        final migrator = i1.Migrator(database, schema);
        await from7To8(migrator, schema);
        return 8;
      case 8:
        final schema = Schema9(database: database);
        final migrator = i1.Migrator(database, schema);
        await from8To9(migrator, schema);
        return 9;
      case 9:
        final schema = Schema10(database: database);
        final migrator = i1.Migrator(database, schema);
        await from9To10(migrator, schema);
        return 10;
      case 10:
        final schema = Schema11(database: database);
        final migrator = i1.Migrator(database, schema);
        await from10To11(migrator, schema);
        return 11;
      case 11:
        final schema = Schema12(database: database);
        final migrator = i1.Migrator(database, schema);
        await from11To12(migrator, schema);
        return 12;
      default:
        throw ArgumentError.value('Unknown migration from $currentVersion');
    }
  };
}

i1.OnUpgrade stepByStep({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, Schema7 schema) from6To7,
  required Future<void> Function(i1.Migrator m, Schema8 schema) from7To8,
  required Future<void> Function(i1.Migrator m, Schema9 schema) from8To9,
  required Future<void> Function(i1.Migrator m, Schema10 schema) from9To10,
  required Future<void> Function(i1.Migrator m, Schema11 schema) from10To11,
  required Future<void> Function(i1.Migrator m, Schema12 schema) from11To12,
}) => i0.VersionedSchema.stepByStepHelper(
  step: migrationSteps(
    from1To2: from1To2,
    from2To3: from2To3,
    from3To4: from3To4,
    from4To5: from4To5,
    from5To6: from5To6,
    from6To7: from6To7,
    from7To8: from7To8,
    from8To9: from8To9,
    from9To10: from9To10,
    from10To11: from10To11,
    from11To12: from11To12,
  ),
);
